on:
  workflow_call:
    inputs:
      release:
        description: name of release to push on docker registry
        type: string
        required: true
        default: v0.0.1
name: push-docker-image
permissions: write-all
jobs:
  push-docker-image:
    name: Build Docker image and push to registry
    runs-on: ubuntu-22.04
    steps:
      - name: wait for build to succeed
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.sha }}
          check-regexp: build release.*
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          allowed-conclusions: success,skipped,cancelled
          verbose: true

      - name: debug
        run: |
          echo inputs.release = ${{ inputs.release }}

      - name: release version only numbers
        id: release-version
        run: |
          echo "${{ inputs.release }}" | sed 's|^[a-zA-Z]\+|RELEASE_VERSION=|' >> $GITHUB_OUTPUT

      - name: Set env ARTIFACT_PREFIX
        run: |
          echo ARTIFACT_PREFIX=${{ github.event.repository.name }}_${{ steps.release-version.outputs.RELEASE_VERSION }} >> $GITHUB_ENV

      - name: Download release asset amd64
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/${{ inputs.release }}
          file: ${{ env.ARTIFACT_PREFIX }}_amd64.deb
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download release asset arm64
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/${{ inputs.release }}
          file: ${{ env.ARTIFACT_PREFIX }}_arm64.deb
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Dockerfile
        run: |
          cat <<EOF > Dockerfile
          # syntax=docker/dockerfile:1
          FROM ubuntu:23.04
          LABEL org.opencontainers.image.description ${{ env.ARTIFACT_PREFIX }}
          ARG TARGETARCH
          COPY ${{ env.ARTIFACT_PREFIX }}_\${TARGETARCH}.deb .
          RUN apt-get install -y ./${{ env.ARTIFACT_PREFIX }}_\${TARGETARCH}.deb
          EXPOSE 443
          EXPOSE 8000
          EXPOSE 8080
          EOF

      - name: Debug
        run: pwd; cat Dockerfile;  ls -R

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to registry
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ inputs.release }}
      - name: Curl
        run: |
          curl --request POST \
          --url 'https://api.github.com/repos/anyproto/go-anytype-infrastructure-experiments/dispatches' \
          --header 'authorization: Bearer ${{ secrets.ANYTYPE_PAT }}' \
          --data '{"event_type": "on-release"}'
